---
- block:

  # Força uma coleta de facts do host em nspawn_host
  - setup: {}

  - name: instala pacotes necessários para rodar containers
    apt:
      state: present
      install_recommends: no
      name:
        - debootstrap
        - systemd-container

  - name: verifica se é necessário bootstrap
    stat:
      path: "{{ nspawn_dir }}/etc/.nspawn.bootstrap.ok"
    register: st

  - name: cria diretório de configurações dos containers
    file:
      state: directory
      path: /etc/systemd/nspawn

  - name: cria dataset do zfs
    zfs:
      name: "{{ nspawn_zfs_dataset }}"
      extra_zfs_properties: "{{ nspawn_zfs_dataset_properties }}"
      state: present
    when: nspawn_zfs_dataset is defined

  - name: executa tasks de bootstrap
    include_tasks: bootstrap-{{ nspawn_distro }}.yml
    when: not st.stat.exists

  - name: cria configurações do container
    copy:
      content: "{{ nspawn_config }}"
      dest: "/etc/systemd/nspawn/{{ nspawn_name }}.nspawn"
    register: conf

  - name: recarrega configurações systemd
    command:
      systemctl daemon-reload
    when: conf is changed

  - name: configura inicialização de container - ativo
    shell: |
      warn=no
      machinectl enable {{ nspawn_name }} &&
      machinectl start {{ nspawn_name }}
    changed_when: False
    when: nspawn_autostart|bool

  - name: configura inicialização de container - desativado
    shell: |
      warn=no
      machinectl disable {{ nspawn_name }}
    changed_when: False
    failed_when: False
    when: not nspawn_autostart|bool

  delegate_to: "{{ nspawn_host }}"
  tags:
    - nspawn
    - nspawn-debian

- name: força coleta de facts do container (e aguarda carregamento)
  setup: {}
  retries: 10
  delay: 10
  tags:
    - nspawn
    - nspawn-debian
  when: nspawn_autostart|bool
