---
- block:
    - name: instala pacotes necessários
      apt:
        name:
          - python-docker
        state: present

    - name: docker pull nas imagens que serão utilizadas
      docker_image:
        source: pull
        name: "{{ item.image }}"
      loop: "{{ docker_containers }}"
      loop_control:
        label: "{{ item.image }}"

    - name: cria o volume do docker para as configurações
      docker_volume:
        volume_name : "{{ item.name }}_conf"
      loop: "{{ docker_containers }}"
      loop_control:
        label: "{{ item.name }}_conf"
      when: item.x_conf_files is defined

    - name: copia os arquivos de configurações
      template:
        src: "{{ item.1.src }}"
        dest: "/var/lib/docker/volumes/{{ item.0.name }}_conf/_data/{{ item.1.src|basename }}"
        mode: "{{ item.1.mode|default('0644') }}"
        owner: "{{ item.1.user|default('root') }}"
        group: "{{ item.1.group|default('root') }}"
      with_subelements:
        - "{{ docker_containers }}"
        - x_conf_files
        - flags:
          skip_missing: True
      loop_control:
        label: "{{ item.0.name }} | {{ item.1.src|basename }}"

    - name: executa os containers
      docker_container:
        api_version: "{{ item.api_version|default(omit) }}"
        auto_remove: "{{ item.auto_remove|default(omit) }}"
        blkio_weight: "{{ item.blkio_weight|default(omit) }}"
        ca_cert: "{{ item.ca_cert|default(omit) }}"
        cap_drop: "{{ item.cap_drop|default(omit) }}"
        capabilities: "{{ item.capabilities|default(omit) }}"
        cleanup: "{{ item.cleanup|default(omit) }}"
        client_cert: "{{ item.client_cert|default(omit) }}"
        client_key: "{{ item.client_key|default(omit) }}"
        command: "{{ item.command|default(omit) }}"
        comparisions: "{{ item.comparisions|default(omit) }}"
        cpu_period: "{{ item.cpu_period|default(omit) }}"
        cpu_quota: "{{ item.cpu_quota|default(omit) }}"
        cpu_shares: "{{ item.cpu_shares|default(omit) }}"
        cpuset_cpus: "{{ item.cpuset_cpus|default(omit) }}"
        cpuset_mems: "{{ item.cpuset_mems|default(omit) }}"
        debug: "{{ item.debug|default(omit) }}"
        detach: "{{ item.detach|default(omit) }}"
        device_read_bps: "{{ item.device_read_bps|default(omit) }}"
        device_read_iops: "{{ item.device_read_iops|default(omit) }}"
        device_write_bps: "{{ item.device_write_bps|default(omit) }}"
        device_write_iops: "{{ item.device_write_iops|default(omit) }}"
        devices: "{{ item.devices|default(omit) }}"
        dns_opts: "{{ item.dns_opts|default(omit) }}"
        dns_search_domains: "{{ item.dns_search_domains|default(omit) }}"
        dns_servers: "{{ item.dns_servers|default(omit) }}"
        docker_host: "{{ item.docker_host|default(omit) }}"
        domainame: "{{ item.domainame|default(omit) }}"
        entrypoint: "{{ item.entrypoint|default(omit) }}"
        env: "{{ item.env|default(omit) }}"
        env_file: "{{ item.env_file|default(omit) }}"
        etc_hosts: "{{ item.etc_hosts|default(omit) }}"
        force_kill: "{{ item.force_kill|default(omit) }}"
        groups: "{{ item.groups|default(omit) }}"
        healthcheck: "{{ item.healthcheck|default(omit) }}"
        hostname: "{{ item.hostname|default(omit) }}"
        ignore_image: "{{ item.ignore_image|default(omit) }}"
        image: "{{ item.image|default(omit) }}"
        init: "{{ item.init|default(omit) }}"
        interactive: "{{ item.interactive|default(omit) }}"
        ipc_mode: "{{ item.ipc_mode|default(omit) }}"
        keep_volumes: "{{ item.keep_volumes|default(omit) }}"
        kernel_memory: "{{ item.kernel_memory|default(omit) }}"
        kill_signal: "{{ item.kill_signal|default(omit) }}"
        labels: "{{ item.labels|default(omit) }}"
        links: "{{ item.links|default(omit) }}"
        log_driver: "{{ item.log_driver|default(omit) }}"
        log_options: "{{ item.log_options|default(omit) }}"
        mac_address: "{{ item.mac_address|default(omit) }}"
        memory: "{{ item.memory|default(omit) }}"
        memory_reservation: "{{ item.memory_reservation|default(omit) }}"
        memory_swap: "{{ item.memory_swap|default(omit) }}"
        memory_swappiness: "{{ item.memory_swappiness|default(omit) }}"
        mounts: "{{ item.mounts|default(omit) }}"
        name: "{{ item.name|default(omit) }}"
        network_mode: "{{ item.network_mode|default(omit) }}"
        networks: "{{ item.networks|default(omit) }}"
        networks_cli_compatible: "{{ item.networks_cli_compatible|default(omit) }}"
        oom_killer: "{{ item.oom_killer|default(omit) }}"
        oom_score_adj: "{{ item.oom_score_adj|default(omit) }}"
        output_logs: "{{ item.output_logs|default(omit) }}"
        paused: "{{ item.paused|default(omit) }}"
        pid_mode: "{{ item.pid_mode|default(omit) }}"
        pids_limit: "{{ item.pids_limit|default(omit) }}"
        privileged: "{{ item.privileged|default(omit) }}"
        published_ports: "{{ item.published_ports|default(omit) }}"
        pull: "{{ item.pull|default(omit) }}"
        purge_networks: "{{ item.purge_networks|default(omit) }}"
        read_only: "{{ item.read_only|default(omit) }}"
        recreate: "{{ item.recreate|default(omit) }}"
        restart: "{{ item.restart|default(omit) }}"
        restart_policy: "{{ item.restart_policy|default(omit) }}"
        restart_retries: "{{ item.restart_retries|default(omit) }}"
        runtime: "{{ item.runtime|default(omit) }}"
        security_opts: "{{ item.security_opts|default(omit) }}"
        shm_size: "{{ item.shm_size|default(omit) }}"
        ssl_version: "{{ item.ssl_version|default(omit) }}"
        state: "{{ item.state|default(omit) }}"
        stop_signal: "{{ item.stop_signal|default(omit) }}"
        stop_timeout: "{{ item.stop_timeout|default(omit) }}"
        sysctls: "{{ item.sysctls|default(omit) }}"
        timeout: "{{ item.timeout|default(omit) }}"
        tls: "{{ item.tls|default(omit) }}"
        tls_hostname: "{{ item.tls_hostname|default(omit) }}"
        tmpfs: "{{ item.tmpfs|default(omit) }}"
        trust_image_content: "{{ item.trust_image_content|default(omit) }}"
        tty: "{{ item.tty|default(omit) }}"
        ulimits: "{{ item.ulimits|default(omit) }}"
        user: "{{ item.user|default(omit) }}"
        userns_mode: "{{ item.userns_mode|default(omit) }}"
        uts: "{{ item.uts|default(omit) }}"
        validate_certs: "{{ item.validate_certs|default(omit) }}"
        volume_driver: "{{ item.volume_driver|default(omit) }}"
        volumes: "{{ item.volumes|default(omit) }}"
        volumes_from: "{{ item.volumes_from|default(omit) }}"
        working_dir: "{{ item.working_dir|default(omit) }}"
      loop: "{{ docker_containers }}"
      loop_control:
        label: "{{ item.name }}"

    - name: copia script para agendar gc nas imagens sem tags
      copy:
        src: "docker-gc-images.sh"
        dest: "/usr/local/bin/docker-gc-images.sh"
        owner: "root"
        group: "root"
        mode: "0755"

    - name: agenda script de gc nas imagens sem tags
      cron:
        name: "remove imagens do docker sem tags"
        special_time: "daily"
        job: "/usr/local/bin/docker-gc-images.sh 2>&1 | /usr/bin/logger"

  tags:
    - "containers"
    - "docker"
