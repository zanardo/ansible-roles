---
- name: instala pacotes necessários
  apt: name={{ item }} state=present
  with_items:
    - build-essential
    - ca-certificates

- name: cria diretórios
  file: >
    state=directory
    dest="/usr/local/{{ item }}"
  with_items:
    - etc
    - src

- name: download do tarball
  get_url: >
    url="http://download.redis.io/releases/redis-{{ redis_version }}.tar.gz"
    dest="/usr/local/src/redis-{{ redis_version }}.tar.gz"

- name: download das assinaturas do redis
  get_url: >
    url="https://raw.githubusercontent.com/antirez/redis-hashes/master/README"
    dest="/usr/local/src/redis-{{ redis_version }}.sign"

- name: verifica assinatura do tarball via hashes
  shell: >
    chdir="/usr/local/src"
    hash=$(grep -E "^hash redis-{{ redis_version }}.tar.gz" "redis-{{ redis_version }}.sign" | cut -f4 -d" "); \
    echo "$hash  redis-{{ redis_version }}.tar.gz" > "redis-{{ redis_version }}.sha1sum" &&
    sha1sum -c "redis-{{ redis_version }}.sha1sum"

- name: descompacta tarball
  shell: >
    warn=no
    chdir=/tmp
    tar xzf "/usr/local/src/redis-{{ redis_version }}.tar.gz"

- name: corrige permissões do source
  shell: >
    warn=no
    chown -R nobody:nogroup "/tmp/redis-{{ redis_version }}"

- name: compila
  become: yes
  become_user: nobody
  shell: >
    chdir="/tmp/redis-{{ redis_version }}/"
    make -j2

- name: instala
  shell: >
    chdir="/tmp/redis-{{ redis_version }}/"
    make install PREFIX=/usr/local
  notify: reinicia redis

- name: copia configuração original
  shell: >
    warn=no
    chdir="/tmp/redis-{{ redis_version }}/"
    cp redis.conf /usr/local/etc/redis.conf.orig

- name: remove arquivos temporários
  become: yes
  become_user: nobody
  file: >
    state=absent
    path="/tmp/redis-{{ redis_version }}"
