---
- name: instala pacotes necessários - debian
  apt:
    state: present
    name:
      - debootstrap
      - systemd-container
      - zstd
    install_recommends: no
  delegate_to: "{{ systemd_container_host }}"

- name: cria diretório de configurações dos containers
  file:
    state: directory
    path: /etc/systemd/nspawn
  delegate_to: "{{ systemd_container_host }}"

- name: cria configurações do container
  copy:
    content: "{{ systemd_container_nspawn_config }}"
    dest: "/etc/systemd/nspawn/{{ systemd_container_name }}.nspawn"
  delegate_to: "{{ systemd_container_host }}"

- name: cria diretório de cache
  file:
    path: "{{ systemd_container_template_cache_dir }}"
    state: directory
  delegate_to: "{{ systemd_container_host }}"

- name: verifica se cache do template existe
  find:
    age: "-{{ systemd_container_cache_max_age }}"
    paths: "{{ systemd_container_template_cache_dir }}"
    patterns: "template-debian-{{ systemd_container_debian }}.tar.zstd"
  register: cache_find
  delegate_to: "{{ systemd_container_host }}"

- name: cria container via template em cache
  shell: |
    warn=no
    creates="/var/lib/machines/{{ systemd_container_name }}/lib"
    chdir=/var/lib/machines/{{ systemd_container_name }}
    zstd -d < "{{ systemd_container_template_cache_file }}" | \
      tar xf -
  when: 'cache_find.matched == 1'
  register: templated_created
  delegate_to: "{{ systemd_container_host }}"

- name: cria container via debootstrap
  environment:
    http_proxy: "{{ systemd_container_http_proxy }}"
  command:
    creates="/var/lib/machines/{{ systemd_container_name }}/lib"
    debootstrap \
      --include=systemd,dbus,locales,python,sudo,openssh-server \
      "{{ systemd_container_debian }}" \
      "/var/lib/machines/{{ systemd_container_name }}" \
      "{{ systemd_container_debian_mirror }}"
  when: 'cache_find.matched == 0'
  register: debootstrap_created
  delegate_to: "{{ systemd_container_host }}"

- name: cria template em cache
  shell: |
    warn=no
    chdir=/var/lib/machines/{{ systemd_container_name }}
    tar cf - . | \
      zstd -c -o "{{ systemd_container_template_cache_file }}"
  when:
    - cache_find.matched == 0
    - debootstrap_created is changed
  delegate_to: "{{ systemd_container_host }}"

- name: executa tasks de bootstrap
  include_tasks: bootstrap.yml
  when:
    - debootstrap_created is changed or templated_created is changed
