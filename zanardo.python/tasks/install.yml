---
- name: instala pacotes
  apt: name="{{ item }}" state=present
  with_items:
    - build-essential
    - libsqlite3-dev
    - sqlite3
    - libbz2-dev
    - bzip2
    - libreadline-dev
    - libncurses5-dev
    - libssl1.0.0
    - libssl-dev
    - zlib1g-dev
    - liblzma-dev
    - ca-certificates

- name: download do tarball
  get_url: >
    url="https://www.python.org/ftp/python/{{ python_version }}/Python-{{ python_version }}.tar.xz"
    dest="/tmp/Python-{{ python_version }}.tar.xz"

- name: extrai o tarball
  shell: >
    warn=no
    chdir="/tmp"
    mkdir -p "Python-{{ python_version }}" &&
    tar -C "Python-{{ python_version }}" --strip-components=1 \
      -xJf "/tmp/Python-{{ python_version }}.tar.xz" &&
    chown -R nobody:nogroup "Python-{{ python_version }}/"

- name: cria diretório /opt/python..
  file: >
    state=directory
    path="/opt/python{{ python_maj_min }}"
    owner=nobody
    group=nogroup

- name: corrige permissões
  file: >
    state=directory
    owner=nobody
    group=nogroup
    path="/opt/python{{ python_maj_min }}"
    recurse=yes

- name: compila e instala
  become: yes
  become_user: nobody
  shell: >
    chdir="/tmp/Python-{{ python_version }}"
    ./configure --prefix="/opt/python{{ python_maj_min }}" &&
    make -j$(nproc) &&
    make install

- name: corrige permissões para root
  file: >
    state=directory
    owner=root
    group=root
    path="/opt/python{{ python_maj_min }}"
    recurse=yes

- name: remove arquivos temporários
  become: yes
  become_user: nobody
  file: >
    state=absent
    path="/tmp/Python-{{ python_version }}"
