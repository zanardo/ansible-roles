---
- block:

  - setup:

  - name: instala pacotes necessários - debian
    apt:
      state: present
      install_recommends: no
      name:
        - debootstrap
        - systemd-container
        - zstd

  - name: cria diretório de configurações dos containers
    file:
      state: directory
      path: /etc/systemd/nspawn

  - name: cria configurações do container
    copy:
      content: "{{ nspawn_container_nspawn_config }}"
      dest: "/etc/systemd/nspawn/{{ nspawn_container_name }}.nspawn"
    register: conf

  - name: recarrega systemd
    command:
      systemctl daemon-reload
    when: conf is changed

  - name: cria diretório de cache
    file:
      path: "{{ nspawn_container_template_cache_dir }}"
      state: directory

  - name: verifica se cache do template existe
    find:
      age: "-{{ nspawn_container_cache_max_age }}"
      paths: "{{ nspawn_container_template_cache_dir }}"
      patterns: "template-debian-{{ nspawn_container_debian }}.tar.zstd"
    register: cache_find

  - name: cria container via template em cache
    shell: |
      warn=no
      creates="{{ nspawn_container_dir }}/.stage1.ok"
      mkdir -p "{{ nspawn_container_dir }}" && \
      zstd -d < "{{ nspawn_container_template_cache_file }}" | \
        tar -C "{{ nspawn_container_dir }}" -xf -
    when: 'cache_find.matched == 1'
    register: templated_created

  - name: cria container via debootstrap
    environment:
      http_proxy: "{{ nspawn_container_http_proxy }}"
    shell:
      warn=no
      creates="{{ nspawn_container_dir }}/.stage1.ok"
      debootstrap \
        --include=systemd,dbus,locales,python3,sudo,openssh-server \
        "{{ nspawn_container_debian }}" \
        "{{ nspawn_container_dir }}" \
        "{{ nspawn_container_debian_mirror }}" && \
      touch "{{ nspawn_container_dir }}/.stage1.ok"
    when: 'cache_find.matched == 0'
    register: debootstrap_created

  - name: cria template em cache
    shell: |
      warn=no
      chdir={{ nspawn_container_dir }}
      tar cf - . | \
        zstd -c -o "{{ nspawn_container_template_cache_file }}"
    when:
      - cache_find.matched == 0
      - debootstrap_created is changed

  - name: verifica se é necessário executar bootstrap
    stat:
      path: "{{ nspawn_container_dir }}/.stage2.ok"
    register: st

  delegate_to: "{{ nspawn_container_host }}"

- name: executa tasks de bootstrap
  include_tasks: bootstrap.yml
  when: not st.stat.exists

- name: configura inicialização de container - ativo
  command:
    warn=no
    machinectl enable {{ nspawn_container_name }}
  delegate_to: "{{ nspawn_container_host }}"
  changed_when: False
  when: nspawn_container_autostart

- name: configura inicialização de container - desativado
  command:
    warn=no
    machinectl disable {{ nspawn_container_name }}
  changed_when: False
  delegate_to: "{{ nspawn_container_host }}"
  when: not nspawn_container_autostart
