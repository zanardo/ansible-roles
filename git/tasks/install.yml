---
- name: instala pacotes
  apt: name="{{ item }}" state=present install_recommends=no
  with_items:
    - build-essential
    - gnupg
    - autoconf
    - libcurl4-gnutls-dev
    - libexpat1-dev
    - gettext
    - asciidoc
    - xmlto
    - docbook2x
    - libssl-dev
    - zlib1g-dev

- name: copia chave pública do gpg
  copy: >
    src=gitster.key
    dest=/tmp/gitster.key
    owner=nobody

- name: download do tarball e assinatura
  get_url: >
    url="http://ftp.kernel.org/pub/software/scm/git/git-{{ git_version }}.tar.{{ item }}"
    dest="/tmp/git-{{ git_version }}.tar.{{ item }}"
  with_items: ["xz", "sign"]

- name: importa chave gpg no keyring
  shell: >
    chdir="/tmp"
    gpg --no-default-keyring --homedir=. --import /tmp/gitster.key

- name: verifica assinatura do tarball via gpg
  shell: >
    chdir="/tmp"
    xzcat "git-{{ git_version }}.tar.xz" | gpg --homedir=. --verify "git-{{ git_version }}.tar.sign" -

- name: extrai o tarball
  shell: >
    warn=no
    chdir="/tmp"
    mkdir -p "git-{{ git_version }}" &&
    tar -C "git-{{ git_version }}" --strip-components=1 \
      -xJf "/tmp/git-{{ git_version }}.tar.xz" &&
    chown -R nobody:nogroup "git-{{ git_version }}/"

- name: cria /opt/git
  file: >
    state=directory
    mode=0755
    owner=nobody
    group=nogroup
    recurse=yes
    path="/opt/git"

- name: compila e instala
  become: yes
  become_user: nobody
  shell: >
    chdir="/tmp/git-{{ git_version }}"
    make configure &&
    ./configure --prefix=/opt/git --with-curl --with-expat &&
    make -j$(nproc) all &&
    make -j$(nproc) man &&
    make install &&
    make install-man &&
    cp contrib/completion/git-completion.bash /opt/git/share/git-core/bash_completion

- name: corrige permissões para root
  file: >
    state=directory
    recurse=yes
    owner=root
    group=root
    path="/opt/git"

- name: remove arquivos temporários
  become: yes
  become_user: nobody
  file: 
    state=absent
    path="/tmp/{{ item }}"
  with_items:
    - "git-{{ git_version }}"
    - "gitster.key"
